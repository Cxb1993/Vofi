                  VOFI Library
                  ============

The  VOFI library initializes the volume fraction scalar field 
in a computational mesh with cubic cells given an analytic expression 
f(x,y,z) for the interface. The implicit function f is specified
by the user, the interface is located where f(x,y,z) = 0 and 
the reference phase where f(x,y,z) < 0. 
Each routine in the directory src contains a brief description
of what it does and of the I/O variables. 

vofi-specific configuration options
======================================


Build Process
-------------

[1] Extract vofi-<package_version>.tar.gz archive into any temporary directory.

[2] Choose a local (e.g. /home/username) or system (e.g. /usr/local)
    destination for '/installing_directory' which is write-able.

[3] The default c-compiler flags are "-O2 -fomit-frame-pointer -ffast-math -Wall". 
    The user can change the default value by setting the environment variable CFLAGS 
    (e.g. "export CFLAGS=-g" to compile the library in debug mode).
    
[4] ./configure --prefix=/installing_directory
    By default, a shared library is built on platforms that support it.
    The user can specify modified forms of the configure flags --enable-shared and 
    --enable-static to choose whether shared and/or static libraries are built.

[5] make all
    (to build the library and to compile tests) 

    if separately:

    cd src
    make all 
    (to build only the library) 

    cd demo_src
    make all
    (to compile all C, Fortran and CPP tests)

[6] make check
    (to run all C, Fortran and CPP tests)
   
[7] make install
    (if the /installing_directory is /usr/local, then
    libvofi.a (or libvofi.so) will be located in /usr/local/lib64, 
    vofi.h in /usr/local/include and the demo executables in /usr/local/bin)


Requirements
------------

The vofi library has no particular requirement other than a 
reasonably modern C, Fortran and C++ compiler.  



